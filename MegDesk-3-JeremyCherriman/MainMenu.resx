<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MegaDeskLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lTy1j82n2c0AAAAASUVORK5CYII=
</value>
  </data>
</root>