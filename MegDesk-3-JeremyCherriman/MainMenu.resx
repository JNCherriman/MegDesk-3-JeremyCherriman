<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MegaDeskLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>